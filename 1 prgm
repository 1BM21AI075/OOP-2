# Define custom exception WrongAge
class WrongAge(Exception):
    def __init__(self, message="Age should be greater than or equal to 0"):
        self.message = message
        super().__init__(self.message)

# Define custom exception AgeInvalid
class AgeInvalid(Exception):
    def __init__(self, message="Son's age should be less than Father's age"):
        self.message = message
        super().__init__(self.message)

# Base class Father
class Father:
    def __init__(self, age):
        if age < 0:
            raise WrongAge("Father's age cannot be less than 0")
        self.age = age

# Derived class Son
class Son(Father):
    def __init__(self, father_age, son_age):
        super().__init__(father_age)  # Call the constructor of the base class

        if son_age >= father_age:
            raise AgeInvalid("Son's age cannot be greater than or equal to Father's age")

        self.son_age = son_age

# Example usage
try:
    father = Father(45)
    son = Son(45, 20)
except WrongAge as e:
    print(f"Error: {e}")
except AgeInvalid as e:
    print(f"Error: {e}")
else:
    print("Father and Son ages are valid.")


    # Define custom exception FormulaError
class FormulaError(Exception):
    def __init__(self, message="Invalid formula"):
        self.message = message
        super().__init__(self.message)

# Function to perform the calculation
def calculate(formula):
    try:
        # Split the formula into three parts: number, operator, number
        num1, operator, num2 = formula.split()

        # Convert the first and third inputs to float
        float_num1 = float(num1)
        float_num2 = float(num2)

        # Check if the operator is either '+' or '-'
        if operator not in ['+', '-']:
            raise FormulaError("Invalid operator. Use only '+' or '-'.")

        # Perform the calculation
        result = float_num1 + float_num2 if operator == '+' else float_num1 - float_num2

        # Print the result
        print(f"Result: {result}")

    except ValueError:
        raise FormulaError("Invalid number format. Please enter valid numbers.")
    except Exception as e:
        raise FormulaError(str(e))

# Interactive calculator loop
while True:
    user_input = input("Enter a formula (or 'quit' to exit): ").strip()

    if user_input.lower() == 'quit':
        break

    try:
        calculate(user_input)
    except FormulaError as e:
        print(f"Error: {e}")

